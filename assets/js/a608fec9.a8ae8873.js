"use strict";(self.webpackChunk_nexara_nativeflow_docs=self.webpackChunk_nexara_nativeflow_docs||[]).push([[485],{3697:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"components/icon","title":"Icon","description":"Icon is a component which receives a icon from prop sets the size of icon according to screen size.","source":"@site/docs/components/icon.md","sourceDirName":"components","slug":"/components/icon","permalink":"/docs/components/icon","draft":false,"unlisted":false,"editUrl":"https://github.com/Yash-dott/nexara-nativeflow-docs/edit/main/docs/docs/components/icon.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Grid","permalink":"/docs/components/grid"},"next":{"title":"Progress *\u26a0\ufe0f\ud83e\uddea","permalink":"/docs/components/progress"}}');var r=o(4848),c=o(8453);const s={},i="Icon",d={},a=[{value:"Implementation code",id:"implementation-code",level:2},{value:"Props",id:"props",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"icon",children:"Icon"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Icon"})," is a component which receives a icon from prop sets the size of icon according to screen size."]}),"\n",(0,r.jsx)("img",{src:o(7601).A,alt:"Example banner",style:{height:200}}),"\n",(0,r.jsx)(n.h2,{id:"implementation-code",children:"Implementation code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { Icon } from '@nexara/nativeflow';\r\nimport { Check } from 'lucide-react-native';\r\n\r\nconst Component = () => {\r\n  return (\r\n    <Icon renderIcon={<Check color='#000' size={16} />} />\r\n  );\r\n}\r\nexport default Component;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"color"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Optional override color for the icon. If not provided, it uses the color from the theme or the icon\u2019s own color prop."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"renderIcon"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"JSX.Element"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"The icon component to be rendered. The size will automatically scale based on screen size using."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7601:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/checkbox-a06a288f2306db1167ea0f24626f21a4.jpeg"},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var t=o(6540);const r={},c=t.createContext(r);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);