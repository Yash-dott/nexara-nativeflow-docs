"use strict";(self.webpackChunk_nexara_nativeflow_docs=self.webpackChunk_nexara_nativeflow_docs||[]).push([[797],{7281:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"components/divider","title":"Divider","description":"Divider component render a separator that can separate two components horizontally and vertically.","source":"@site/docs/components/divider.md","sourceDirName":"components","slug":"/components/divider","permalink":"/docs/components/divider","draft":false,"unlisted":false,"editUrl":"https://github.com/Yash-dott/nexara-nativeflow-docs/edit/main/docs/docs/components/divider.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dialog","permalink":"/docs/components/dialog"},"next":{"title":"Grid","permalink":"/docs/components/grid"}}');var d=n(2467),i=n(8453);const o={},s="Divider",c={},l=[{value:"Implementation code",id:"implementation-code",level:2},{value:"Divider Props",id:"divider-props",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"divider",children:"Divider"})}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"Divider"})," component render a separator that can separate two components horizontally and vertically."]}),"\n",(0,d.jsx)(t.h2,{id:"implementation-code",children:"Implementation code"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-jsx",children:"import { StyledView, StyledText, Divider } from '@nexara/nativeflow';\r\n\r\nconst Component = () => {\r\n  return (\r\n        <StyledView gap={20}>\r\n            <StyledText primary>Item 1</StyledText>\r\n            <Divider />\r\n            <StyledText primary>Item 2</StyledText>\r\n        </StyledView>\r\n\r\n        <StyledView gap={20} flexDirection='row'>\r\n            <StyledText primary>Item 1</StyledText>\r\n            <Divider />\r\n            <StyledText primary>Item 2</StyledText>\r\n        </StyledView>\r\n    );\r\n}\r\nexport default Component;\n"})}),"\n",(0,d.jsx)(t.h2,{id:"divider-props",children:"Divider Props"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Prop"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Default"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"thickness"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"number"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"0.7"})}),(0,d.jsx)(t.td,{children:"Sets the thickness of the divider line."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"color"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Sets the color of the divider line; falls back to theme's subtle border color if not provided."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"style"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"StyleProp<ViewStyle>"})}),(0,d.jsx)(t.td,{}),(0,d.jsx)(t.td,{children:"Custom styles to apply to the divider."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(6540);const d={},i=r.createContext(d);function o(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);